スタックを用いた番兵法
procedure banpei(stack s, int key, stack t, int f, stack gb)
    local int x = 0
    
      local int temp = key
        push(temp, t)
      delocal int temp = 0
    
      push(1, gb)
      from top(gb) = 1 loop
         pop(x, s)
         push(x, t)
         push(0, gb)
      until empty(s)    
    
      push(1, gb)
      from top(gb) = 1 loop
         pop(x, t)
         push(x, s)
         push(0, gb)
      until top(t) = key
    
      pop(x, t)
      push(x, s)
    
      if !empty(t) then
          push(f, gb)
          f ^= 1
          push(1, gb)
      else
          push(f, gb)
          f ^= -1
          push(0, gb)
      fi top(gb) = 1
    
      push(x, gb)
    delocal int x = 0

procedure banpei1(stack s, int key, int f)
    local stack g = nil
     local stack t = nil
      local int y = 0
       call banpei(s, key, t, y, g)
       f ^= y
       uncall banpei(s, key, t, y, g)
      delocal int y = 0
     delocal stack t = nil
    delocal stack g = nil


procedure main()
    int key
    int f
    stack s
    key ^= 1
    local int x = 0
      x += 1
      push(x, s)
      x += 2
      push(x, s)
      x += 3
      push(x, s)
      x += 4
      push(x, s)
      x += 5
      push(x, s)
      x += 6
      push(x, s)
      x+=7
      push(x, s)
      x += 8
      push(x, s)
      x += 9
      push(x, s)
      x += 10
      push(x, s)
    delocal int x = 0
    
    call banpei1(s, key, f)
