// スタックを用いた通常型
procedure search_stack_landauer(stack s, int key, int f, stack g)
  local int x = 0
    push(1, g)
    from top(g) = 1 loop
      if top(s) = key then
        push(f, g)
        f ^= 1
        push(1, g)
      else
        push(0, g)
      fi top(g) = 1
      push(x, g)
      pop(x, s)
      push(0, g)
    until f != 0 || empty(s)    
  
    push(x, g)
  delocal int x = 0

procedure search_stack_bennett(stack s, int key, int f)
  local stack g = nil
    local int y = 0
      call search_stack_landauer(s, key, y, g)
      f ^= y
      uncall search_stack_landauer(s, key, y, g)
    delocal int y = 0
  delocal stack g = nil

procedure main()
  stack s
  int k
  int f
  k ^= 51
 
  push(1, s)
  push(2, s)
  push(3, s)
  push(4, s)
  push(5, s)
  push(6, s)
  push(7, s)
  push(8, s)
  push(9, s)
  push(10, s)
   
  call search_stack_bennett(s,k,f)
  show(f)
  k ^= 51 // zero clear

  k ^= 6
  call search_stack_bennett(s,k,f)
  show(f)