配列を用いた昇順型
procedure aolinear1(int k[], int key, int n, int f, stack g)
    local int i = 0
    
      push(1, g)
      from top(g) = 1 loop
         i += 1
         push(0, g)
      until key <= k[i]
    
    
      if k[i] = key && i != n then
          push(f, g)
          f ^= 1
          push(1, g)
      else
          push(f, g)
          f ^= -1
          push(0, g)
      fi top(g) = 1
    
      push(i, g)
    delocal int i = 0
    
procedure aolinear2(int k[], int key, int n, int f)
    local stack g = nil
      local int x = 0
        call aolinear1(k, key, n, x, g)
        f ^= x
        uncall aolinear1(k, key, n, x, g)
      delocal int x = 0
    delocal stack g = nil  
    
procedure main()
    int k[11] = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 100}
    int key
    int f
    int n
    key ^= 100
    n ^= 10
    
    call aolinear2(k, key, n, f)

procedure aosearch(int k[], int key, int n, int f, stack g)
    local int i = 0
    
      push(1, g)
      from top(g) = 1 loop
         i += 1
         push(0, g)
      until key <= k[i]
    
    
      if k[i] = key && i != n then
          push(f, g)
          f ^= 1
          push(1, g)
      else
          push(f, g)
          f ^= -1
          push(0, g)
      fi top(g) = 1
    
      push(i, g)
    delocal int i = 0
    
procedure main()
    int k[11] = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 100}
    int key
    int f
    int n
    key ^= 11
    n ^= 10
 
    local stack g = nil
      local int x = 0
        call aosearch(k, key, n, x, g)
        f ^= x
        uncall aosearch(k, key, n, x, g)
     delocal int x = 0
    delocal stack g = nil
